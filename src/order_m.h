//
// Generated file, do not edit! Created by nedtool 5.5 from order.msg.
//

#ifndef __ORDER_M_H
#define __ORDER_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>order.msg:1</tt> by nedtool.
 * <pre>
 * message Order
 * {
 *     bool vip;
 *     bool compound;
 *     simtime_t creationTime;
 * }
 * </pre>
 */
class Order : public ::omnetpp::cMessage
{
  protected:
    bool vip;
    bool compound;
    ::omnetpp::simtime_t creationTime;

  private:
    void copy(const Order& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Order&);

  public:
    Order(const char *name=nullptr, short kind=0);
    Order(const Order& other);
    virtual ~Order();
    Order& operator=(const Order& other);
    virtual Order *dup() const override {return new Order(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual bool getVip() const;
    virtual void setVip(bool vip);
    virtual bool getCompound() const;
    virtual void setCompound(bool compound);
    virtual ::omnetpp::simtime_t getCreationTime() const;
    virtual void setCreationTime(::omnetpp::simtime_t creationTime);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Order& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Order& obj) {obj.parsimUnpack(b);}


#endif // ifndef __ORDER_M_H

